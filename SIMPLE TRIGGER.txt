//FOR UPDATE BEFORE UPDATE AND AFTER UPDATE ARE SAME


CREATE OR REPLACE TRIGGER STU.UPDATEEMPLOYEE
    BEFORE UPDATE ON STU.EMPLOYEE
        FOR EACH ROW
            BEGIN
                INSERT INTO STU.OLDEMPLOYEE(ID,NAME,DEPT_ID,DPT_NAME,LOCATION) VALUES (:OLD.ID,:OLD.NAME,:OLD.DEPT_ID,:OLD.DPT_NAME,:OLD.LOCATION);
                
            END;
            /    

//ANOTHER TRIGGER

SELECT * FROM STU.PRODUCT_STOCK;
SELECT * FROM STU.SALES;



CREATE OR REPLACE TRIGGER STU.UPDA_ON_INS_TRG
    AFTER INSERT ON STU.SALES
    FOR EACH ROW
    BEGIN
    UPDATE STU.PRODUCT_STOCK SET TOTAL=TOTAL-1 WHERE PRODUCT_ID= :NEW.PRODUCT_ID;
    END;
    /
    
 INSERT INTO STU.SALES(PRODUCT_ID,CUSTOMER_NAME) VALUES (2,'ASHWIN'); 

//TRIGGER ALL COMBINING

CREATE OR REPLACE TRIGGER STU.LOGTRIGGER
    AFTER INSERT OR UPDATE OR DELETE ON STU.EMPLOYEE
        FOR EACH ROW
            BEGIN
                
            
                IF INSERTING THEN
                    INSERT INTO STU.EMPLOYEELOG(ID,COMMAND) VALUES(:NEW.ID,'INSERTED');
                ELSIF UPDATING THEN
                    INSERT INTO STU.EMPLOYEELOG(ID,COMMAND) VALUES(:NEW.ID,'UPDATED');    
                 ELSIF DELETING THEN
                      INSERT INTO STU.EMPLOYEELOG(ID,COMMAND) VALUES(:OLD.ID,'DELETED');   
                      
                END IF;
                
                
                END;
                /
               
